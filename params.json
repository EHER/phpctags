{"name":"Phpctags","tagline":"An enhanced ctags compatible index generator written in pure PHP.","body":"phpctags\r\n========\r\n\r\nAn enhanced php [ctags](http://ctags.sourceforge.net/) index file generator\r\ncompatible with http://ctags.sourceforge.net/FORMAT.\r\n\r\nUsing [PHP_Parse](https://github.com/nikic/PHP-Parser) as PHP syntax parsing\r\nbackend, written in pure PHP. The generated ctags index file contains scope\r\nand access information about class's methods and properties.\r\n\r\nThis tool was originally developed to enhance the PHP syntax outline surport\r\nfor vim [tagbar](http://majutsushi.github.com/tagbar/) plugin. The enhaced\r\nfunctionality has been included into an addon plugin for tagbar as\r\n[tagbar-phpctags](https://github.com/techlivezheng/tagbar-phpctags).\r\n\r\nEnjoy!\r\n\r\nInstallation\r\n------------\r\n\r\nWe use [composer](http://getcomposer.org/) for dependency management, run the\r\nfollowing commands under the project directory to get composer and install the\r\ndependency.\r\n\r\n    curl -s http://getcomposer.org/installer | php\r\n    php composer.phar install\r\n\r\nSee [phpctags on packagist](http://packagist.org/packages/techlivezheng/phpctags)\r\nfor more details.\r\n\r\nRequirements\r\n------------\r\n\r\n* PHP CLI 5.3+\r\n* [PHP-Parser](https://github.com/nikic/PHP-Parser)\r\n\r\nAcknowledgements\r\n----------------\r\n\r\n* [Snapi](https://github.com/sanpii) for composer support.\r\n* [DeMarko](https://github.com/DeMarko) for memory limit support.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}